networks:
  # 기존 애플리케이션들과 통합하기 위한 외부 네트워크
  app_network:
    external: true
    name: spring-app_spring-network  # 실제 Spring Boot, Jenkins 네트워크명
  # 모니터링 전용 내부 네트워크
  monitoring:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data:

services:
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: jandi-prometheus-deploy
    restart: unless-stopped
    ports:
      - "0.0.0.0:9090:9090"
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--storage.tsdb.retention.size=10GB'
      - '--web.enable-lifecycle'
    networks:
      - app_network     # Spring Boot, Jenkins와 통신
      - monitoring      # 내부 모니터링 통신

  grafana:
    image: grafana/grafana:10.0.0
    container_name: jandi-grafana-deploy
    restart: unless-stopped
    user: "0:0"  # root 권한으로 실행하여 권한 문제 해결
    ports:
      - "0.0.0.0:3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_SECURITY_ADMIN_USER=admin
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_PATHS_DASHBOARDS=/var/lib/grafana/dashboards
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards:ro
    networks:
      - monitoring
    depends_on:
      - prometheus 